function autocomplete(e,t,l){var n;function i(e){return"<mark>"+e+"</mark>"}function a(e){if(!e)return!1;(function e(t){for(var l=0;l<t.length;l++)t[l].classList.remove("autocomplete-active")})(e),n>=e.length&&(n=0),n<0&&(n=e.length-1),e[n].classList.add("autocomplete-active")}function o(t){for(var l=document.getElementsByClassName("autocomplete-items"),n=0;n<l.length;n++)t!=l[n]&&t!=e&&l[n].parentNode.removeChild(l[n])}e.addEventListener("input",function(e){var a,r,s=this.value;if(o(),!s)return!1;s=s.toLowerCase().trim();let c=s.split(" ");n=-1,(a=document.createElement("DIV")).setAttribute("id",this.id+"autocomplete-list"),a.setAttribute("class","autocomplete-items"),this.parentNode.appendChild(a);let u=new Map;for(let d of Object.keys(t))for(s of c)if(d.includes(s))for(let f of t[d])if(u.has(f)){let m=u.get(f);m.matchs.includes(s)||m.matchs.push(s)}else u.set(f,{title:l[f].title,url:l[f].url,matchs:[s]});for(let h of u.values())if(h.matchs.length===c.length){r=document.createElement("DIV");let p=h.title;for(match of h.matchs){p=p.replace(match,i(match));let v=match.charAt(0).toUpperCase()+match.slice(1);p=p.replace(v,i(v))}r.innerHTML+='<a href="/'+h.url+'">'+p+"</a>",r.innerHTML+="<input type='hidden' value='/"+h.url+"'>",r.addEventListener("click",function(e){window.location.href=this.getElementsByTagName("input")[0].value,o()}),a.appendChild(r)}}),e.addEventListener("keydown",function(e){var t=document.getElementById(this.id+"autocomplete-list");t&&(t=t.getElementsByTagName("div")),40==e.keyCode?(n++,a(t)):38==e.keyCode?(n--,a(t)):13==e.keyCode&&(e.preventDefault(),n>-1&&t&&t[n].click())}),document.addEventListener("click",function(e){o(e.target)})}